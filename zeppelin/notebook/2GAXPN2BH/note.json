{
  "paragraphs": [
    {
      "text": "%md \n# From Kinesis to Neo4j \n\n\u003cimg src\u003d\"https://cdn-images-1.medium.com/max/800/1*4h-eTNATcjq-5ZSOhQeARQ.jpeg\" style\u003d\"display:block; margin: 30px auto; width: 500px\" /\u003e\n\nThis notebook is related to the article [(from:Kinesis)-[:VIA_SPARK]-\u003e(to:Neo4j)](https://medium.com/@utnaf/from-kinesis-via-spark-to-neo4j-97d564562b61). \n\nPlease follow the article for a more in depth explenation on what\u0027s happening here!",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 07:41:03.915",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eFrom Kinesis to Neo4j\u003c/h1\u003e\n\u003cimg src\u003d\"https://cdn-images-1.medium.com/max/800/1*4h-eTNATcjq-5ZSOhQeARQ.jpeg\" style\u003d\"display:block; margin: 30px auto; width: 500px\" /\u003e\n\u003cp\u003eThis notebook is related to the article \u003ca href\u003d\"https://medium.com/@utnaf/from-kinesis-via-spark-to-neo4j-97d564562b61\"\u003e(from:Kinesis)-[:VIA_SPARK]-\u0026gt;(to:Neo4j)\u003c/a\u003e. \u003c/p\u003e\n\u003cp\u003ePlease follow the article for a more in depth explenation on what\u0026rsquo;s happening here!\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626691934905_1930189400",
      "id": "20210719-105214_358314212",
      "dateCreated": "2021-07-19 10:52:14.905",
      "dateStarted": "2021-07-20 07:41:03.915",
      "dateFinished": "2021-07-20 07:41:03.929",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nFirst we need to setup some variables frist, these are needed in order to make Spark reading from the correct Kinesis stream.\n\n* **Stream Name**: is the name given to the stream when it has been created\n* **Kinesis Endpoint**: is the endpoint URL for the stream\n* **AWS_ACCESS_KEY_ID** and **AWS_SECRET_ACCESS_KEY**: are the access keys for the IAM user",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 07:37:13.806",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eFirst we need to setup some variables frist, these are needed in order to make Spark reading from the correct Kinesis stream.\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003eStream Name\u003c/strong\u003e: is the name given to the stream when it has been created\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eKinesis Endpoint\u003c/strong\u003e: is the endpoint URL for the stream\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eAWS_ACCESS_KEY_ID\u003c/strong\u003e and \u003cstrong\u003eAWS_SECRET_ACCESS_KEY\u003c/strong\u003e: are the access keys for the IAM user\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626692324463_1440067344",
      "id": "20210719-105844_1205926805",
      "dateCreated": "2021-07-19 10:58:44.463",
      "dateStarted": "2021-07-20 07:37:13.808",
      "dateFinished": "2021-07-20 07:37:13.849",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n\nTo be able to read from Kinesis we leverage the [Kinesis Connector for Spark](https://github.com/qubole/kinesis-sql)\n     \nBasic Kinesis configuration:\n\n* **StreamName**: this is the Kinesis Data Stream name you set when creating the stream\n* **KinesisEndpoint**: can be found [here](https://docs.aws.amazon.com/general/latest/gr/ak.html)\n* **AWS_ACCESS_KEY_ID** and **AWS_SECRET_ACCESS_KEY**: IAM user connection keys\n     \n**NOTE**: `startingPosition` is the starting position in Kinesis to fetch data from.\nIn our case we want just the new data. \n\nReference to the [Kinesis Connector docs](https://github.com/qubole/kinesis-sql/blob/master/README.md#kinesis-source-configuration) for other possible values.",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:49:56.921",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eTo be able to read from Kinesis we leverage the \u003ca href\u003d\"https://github.com/qubole/kinesis-sql\"\u003eKinesis Connector for Spark\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eBasic Kinesis configuration:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003cstrong\u003eStreamName\u003c/strong\u003e: this is the Kinesis Data Stream name you set when creating the stream\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eKinesisEndpoint\u003c/strong\u003e: can be found \u003ca href\u003d\"https://docs.aws.amazon.com/general/latest/gr/ak.html\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eAWS_ACCESS_KEY_ID\u003c/strong\u003e and \u003cstrong\u003eAWS_SECRET_ACCESS_KEY\u003c/strong\u003e: IAM user connection keys\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eNOTE\u003c/strong\u003e: \u003ccode\u003estartingPosition\u003c/code\u003e is the starting position in Kinesis to fetch data from.\u003cbr/\u003eIn our case we want just the new data. \u003c/p\u003e\n\u003cp\u003eReference to the \u003ca href\u003d\"https://github.com/qubole/kinesis-sql/blob/master/README.md#kinesis-source-configuration\"\u003eKinesis Connector docs\u003c/a\u003e for other possible values.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626692690664_619901924",
      "id": "20210719-110450_903499867",
      "dateCreated": "2021-07-19 11:04:50.664",
      "dateStarted": "2021-07-20 08:49:56.922",
      "dateFinished": "2021-07-20 08:49:56.943",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Read the Kinesis Data Stream",
      "text": "val kinesisStream \u003d spark.readStream\n    .format(\"kinesis\")\n    .option(\"streamName\", z.textbox(\"StreamName\").toString)\n    .option(\"endpointUrl\",  z.textbox(\"KinesisEndpoint\").toString)\n    .option(\"awsAccessKeyId\", z.textbox(\"AwsAccessKeyId\").toString)\n    .option(\"awsSecretKey\", z.textbox(\"AwsSecretAccessKey\").toString)\n    .option(\"startingPosition\", \"LATEST\")\n    .load",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 09:32:56.552",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "lineNumbers": true,
        "editorHide": false
      },
      "settings": {
        "params": {
          "StreamName": "",
          "KinesisEndpoint": "",
          "AwsAccessKeyId": "",
          "AwsSecretAccessKey": ""
        },
        "forms": {
          "StreamName": {
            "type": "TextBox",
            "name": "StreamName",
            "displayName": "StreamName",
            "defaultValue": "",
            "hidden": false
          },
          "KinesisEndpoint": {
            "type": "TextBox",
            "name": "KinesisEndpoint",
            "displayName": "KinesisEndpoint",
            "defaultValue": "",
            "hidden": false
          },
          "AwsAccessKeyId": {
            "type": "TextBox",
            "name": "AwsAccessKeyId",
            "displayName": "AwsAccessKeyId",
            "defaultValue": "",
            "hidden": false
          },
          "AwsSecretAccessKey": {
            "type": "TextBox",
            "name": "AwsSecretAccessKey",
            "displayName": "AwsSecretAccessKey",
            "defaultValue": "",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.lang.IllegalArgumentException: Stream name is a required field\n  at org.apache.spark.sql.kinesis.KinesisSourceProvider.validateStreamOptions(KinesisSourceProvider.scala:124)\n  at org.apache.spark.sql.kinesis.KinesisSourceProvider.sourceSchema(KinesisSourceProvider.scala:59)\n  at org.apache.spark.sql.execution.datasources.DataSource.sourceSchema(DataSource.scala:209)\n  at org.apache.spark.sql.execution.datasources.DataSource.sourceInfo$lzycompute(DataSource.scala:95)\n  at org.apache.spark.sql.execution.datasources.DataSource.sourceInfo(DataSource.scala:95)\n  at org.apache.spark.sql.execution.streaming.StreamingRelation$.apply(StreamingRelation.scala:33)\n  at org.apache.spark.sql.streaming.DataStreamReader.load(DataStreamReader.scala:171)\n  ... 47 elided\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626688999901_-387861054",
      "id": "20210719-100319_1772697111",
      "dateCreated": "2021-07-19 10:03:19.901",
      "dateStarted": "2021-07-20 09:32:18.599",
      "dateFinished": "2021-07-20 09:32:29.809",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Let\u0027s look at the schema",
      "text": "kinesisStream.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:42:52.319",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- data: binary (nullable \u003d true)\n |-- streamName: string (nullable \u003d true)\n |-- partitionKey: string (nullable \u003d true)\n |-- sequenceNumber: string (nullable \u003d true)\n |-- approximateArrivalTimestamp: timestamp (nullable \u003d true)\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626706765490_925435866",
      "id": "20210719-145925_1851357896",
      "dateCreated": "2021-07-19 14:59:25.490",
      "dateStarted": "2021-07-20 08:29:18.038",
      "dateFinished": "2021-07-20 08:29:18.275",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create the schema of the messages we\u0027ll be receving from Kinesis",
      "text": "import org.apache.spark.sql.types.{DataTypes, StructField, StructType}\n\nval kinesisStreamDataSchema \u003d StructType(Seq(\n    StructField(\"user_name\", DataTypes.StringType, nullable \u003d false),\n    StructField(\"user_checkin_time\", DataTypes.TimestampType, nullable \u003d false),\n    StructField(\"event_name\", DataTypes.StringType, nullable \u003d false)\n))",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:46:31.733",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.types.{DataTypes, StructField, StructType}\nkinesisStreamDataSchema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(user_name,StringType,false), StructField(user_checkin_time,TimestampType,false), StructField(event_name,StringType,false))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626691715316_-1731584791",
      "id": "20210719-104835_393416536",
      "dateCreated": "2021-07-19 10:48:35.316",
      "dateStarted": "2021-07-20 08:29:47.191",
      "dateFinished": "2021-07-20 08:29:47.797",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Get the `data` field from Kinesis stream and cast it to JSON according to the specified schema",
      "text": "import org.apache.spark.sql.functions._\n\nval kinesisData \u003d kinesisStream\n    .selectExpr(\"CAST(data AS STRING)\").as[String]\n    .withColumn(\"jsonData\", from_json(col(\"data\"), kinesisStreamDataSchema))\n    .select(\"jsonData.*\")",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:46:19.217",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions._\nkinesisData: org.apache.spark.sql.DataFrame \u003d [user_name: string, user_checkin_time: timestamp ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626689913153_-1417501963",
      "id": "20210719-101833_1686249824",
      "dateCreated": "2021-07-19 10:18:33.153",
      "dateStarted": "2021-07-20 08:29:55.711",
      "dateFinished": "2021-07-20 08:29:57.121",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Look at the new DataFrame schema",
      "text": "kinesisData.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:44:41.383",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- user_name: string (nullable \u003d true)\n |-- user_checkin_time: timestamp (nullable \u003d true)\n |-- event_name: string (nullable \u003d true)\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626707871725_-1705012598",
      "id": "20210719-151751_493485953",
      "dateCreated": "2021-07-19 15:17:51.725",
      "dateStarted": "2021-07-20 08:29:59.613",
      "dateFinished": "2021-07-20 08:29:59.846",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Start writing to Neo4j!",
      "text": "val kinesisQuery \u003d kinesisData\n    .writeStream\n    // connection options\n    .format(\"org.neo4j.spark.DataSource\")\n    .option(\"url\", \"bolt://neo4j:7687\")\n    .option(\"authentication.type\", \"basic\")\n    .option(\"authentication.basic.username\", \"neo4j\")\n    .option(\"authentication.basic.password\", \"password\")\n    .option(\"checkpointLocation\", \"/tmp/kinesis2Neo4jCheckpoint\")\n    // actual writing setup\n    .option(\"save.mode\", \"Append\")\n    .option(\"relationship\", \"CHECKED_IN\")\n    .option(\"relationship.save.strategy\", \"keys\")\n    .option(\"relationship.properties\", \"user_checkin_time:at\")\n    .option(\"relationship.source.labels\", \":Attendee\")\n    .option(\"relationship.source.save.mode\", \"Overwrite\")\n    .option(\"relationship.source.node.keys\", \"user_name:name\")\n    .option(\"relationship.target.labels\", \":Event\")\n    .option(\"relationship.target.save.mode\", \"Overwrite\")\n    .option(\"relationship.target.node.keys\", \"event_name:name\")\n    .start()",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:46:00.729",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "kinesisQuery: org.apache.spark.sql.streaming.StreamingQuery \u003d org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@64f293e5\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626690685966_2101602033",
      "id": "20210719-103125_936226219",
      "dateCreated": "2021-07-19 10:31:25.967",
      "dateStarted": "2021-07-20 08:30:24.238",
      "dateFinished": "2021-07-20 08:30:24.738",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Check if the query is running",
      "text": "if (kinesisQuery.isActive) {\n    println(\"Query is ACTIVE\")\n}\nelse {\n    println(\"Query is NOT ACTIVE\")\n}",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:45:22.645",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query is NOT ACTIVE\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1626709968538_740145701",
      "id": "20210719-155248_223566072",
      "dateCreated": "2021-07-19 15:52:48.538",
      "dateStarted": "2021-07-20 08:45:08.611",
      "dateFinished": "2021-07-20 08:45:08.755",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Stop the query!",
      "text": "kinesisQuery.stop()",
      "user": "anonymous",
      "dateUpdated": "2021-07-20 08:45:54.883",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1626690837788_1585839893",
      "id": "20210719-103357_651776862",
      "dateCreated": "2021-07-19 10:33:57.788",
      "dateStarted": "2021-07-20 08:31:04.191",
      "dateFinished": "2021-07-20 08:31:04.530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Streaming/From Kinesis to Neo4j",
  "id": "2GAXPN2BH",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}